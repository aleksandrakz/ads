The function sim(trials) takes an integer "trials" and plays that many games, randomly choosing whether to hit or stay on each hand. It records in a table how often the player wins if it stays on that number and how often it dies (goes over 21) if it hits. This information is recorded in the a stats matrix. This matrix is saved into "stats.npy" which is a computer readable, but not person readable file. This file is also submitted as the transcript of the simulation. 

The function hitme(playerhand, dealerfacecard) takes two integers- one the sum of the cards currently in the player's hand and one designating the score of the one visible dealer card and decides whether or not to hit on this move. It looks into the matrix in transcript.npy and finds if the probability of winning if it chooses to stay is higher than the probability of having a score of less than 21 if it chooses to hit (meaning it would survive to the next round). If this is the case, it returns False and the player stands. Otherwise (the probability of winning is lower than the chances of not dying) it returns True and the player hits.

The function play(trials) takes an integer trials and plays that many games, choosing whether or not to hit based on the hitme() function. In a run of 100,000 games, the player wins between 39.42% and 42.1% of the time. 